namespace Solution2019
{
	namespace Test{ void Main(); }
	namespace TwoSum{ void Main(); }
	namespace AddTwoNumbers{ void Main(); }
	namespace LongestSubstringWithoutRepeatingCharacters{ void Main(); }
	namespace MedianofTwoSortedArrays{ void Main(); }
	namespace LongestPalindromicSubstring{ void Main(); }
	namespace ZigZagConversion{ void Main(); }
	namespace ReverseInteger{ void Main(); }
	namespace StringtoInteger{ void Main(); }
	namespace PalindromeNumber{ void Main(); }
	namespace RegularExpressionMatching{ void Main(); }
	namespace ContainerWithMostWater{ void Main(); }
	namespace IntegertoRoman{ void Main(); }
	namespace RomantoInteger{ void Main(); }
	namespace LongestCommonPrefix{ void Main(); }
	namespace ThreeSum{ void Main(); }
	namespace ThreeSumClosest{ void Main(); }
	namespace LetterCombinationsofaPhoneNumber{ void Main(); }
	namespace FourSum{ void Main(); }
	namespace RemoveNthNodeFromEndofList{ void Main(); }
	namespace ValidParentheses{ void Main(); }
	namespace MergeTwoSortedLists{ void Main(); }
	namespace GenerateParentheses{ void Main(); }
	namespace MergekSortedLists{ void Main(); }
	namespace SwapNodesinPairs{ void Main(); }
	namespace ReverseNodesinkGroup{ void Main(); }
	namespace RemoveDuplicatesfromSortedArray{ void Main(); }
	namespace RemoveElement{ void Main(); }
	namespace ImplementstrStr{ void Main(); }
	namespace DivideTwoIntegers{ void Main(); }
	namespace SubstringwithConcatenationofAllWords{ void Main(); }
	namespace NextPermutation{ void Main(); }
	namespace LongestValidParentheses{ void Main(); }
	namespace SearchinRotatedSortedArray{ void Main(); }
	namespace FindFirstandLastPositionofElementinSortedArray{ void Main(); }
	namespace SearchInsertPosition{ void Main(); }
	namespace ValidSudoku{ void Main(); }
	namespace SudokuSolver{ void Main(); }
	namespace CountandSay{ void Main(); }
	namespace CombinationSum{ void Main(); }
	namespace CombinationSumII{ void Main(); }
	namespace FirstMissingPositive{ void Main(); }
	namespace TrappingRainWater{ void Main(); }
	namespace MultiplyStrings{ void Main(); }
	namespace WildcardMatching{ void Main(); }
	namespace JumpGameII{ void Main(); }
	namespace Permutations{ void Main(); }
	namespace PermutationsII{ void Main(); }
	namespace RotateImage{ void Main(); }
	namespace GroupAnagrams{ void Main(); }
	namespace Pow{ void Main(); }
	namespace NQueens{ void Main(); }
	namespace NQueensII{ void Main(); }
	namespace MaximumSubarray{ void Main(); }
	namespace SpiralMatrix{ void Main(); }
	namespace JumpGame{ void Main(); }
	namespace MergeIntervals{ void Main(); }
	namespace InsertInterval{ void Main(); }
	namespace LengthofLastWord{ void Main(); }
	namespace SpiralMatrixII{ void Main(); }
	namespace PermutationSequence{ void Main(); }
	namespace RotateList{ void Main(); }
	namespace UniquePaths{ void Main(); }
	namespace UniquePathsII{ void Main(); }
	namespace MinimumPathSum{ void Main(); }
	namespace ValidNumber{ void Main(); }
	namespace PlusOne{ void Main(); }
	namespace AddBinary{ void Main(); }
	namespace TextJustification{ void Main(); }
	namespace Sqrt{ void Main(); }
	namespace ClimbingStairs{ void Main(); }
	namespace SimplifyPath{ void Main(); }
	namespace EditDistance{ void Main(); }
	namespace SetMatrixZeroes{ void Main(); }
	namespace SearchaTwoDMatrix{ void Main(); }
	namespace SortColors{ void Main(); }
	namespace MinimumWindowSubstring{ void Main(); }
	namespace Combinations{ void Main(); }
	namespace Subsets{ void Main(); }
	namespace WordSearch{ void Main(); }
	namespace RemoveDuplicatesfromSortedArrayII{ void Main(); }
	namespace SearchinRotatedSortedArrayII{ void Main(); }
	namespace RemoveDuplicatesfromSortedListII{ void Main(); }
	namespace RemoveDuplicatesfromSortedList{ void Main(); }
	namespace LargestRectangleinHistogram{ void Main(); }
	namespace MaximalRectangle{ void Main(); }
	namespace PartitionList{ void Main(); }
	namespace ScrambleString{ void Main(); }
	namespace MergeSortedArray{ void Main(); }
	namespace GrayCode{ void Main(); }
	namespace SubsetsII{ void Main(); }
	namespace DecodeWays{ void Main(); }
	namespace ReverseLinkedListII{ void Main(); }
	namespace RestoreIPAddresses{ void Main(); }
	namespace BinaryTreeInorderTraversal{ void Main(); }
	namespace UniqueBinarySearchTreesII{ void Main(); }
	namespace UniqueBinarySearchTrees{ void Main(); }
	namespace InterleavingString{ void Main(); }
	namespace ValidateBinarySearchTree{ void Main(); }
	namespace RecoverBinarySearchTree{ void Main(); }
	namespace SameTree{ void Main(); }
	namespace SymmetricTree{ void Main(); }
	namespace BinaryTreeLevelOrderTraversal{ void Main(); }
	namespace BinaryTreeZigzagLevelOrderTraversal{ void Main(); }
	namespace MaximumDepthofBinaryTree{ void Main(); }
	namespace ConstructBinaryTreefromPreorderandInorderTraversal{ void Main(); }
	namespace ConstructBinaryTreefromInorderandPostorderTraversal{ void Main(); }
	namespace BinaryTreeLevelOrderTraversalII{ void Main(); }
	namespace ConvertSortedArraytoBinarySearchTree{ void Main(); }
	namespace ConvertSortedListtoBinarySearchTree{ void Main(); }
	namespace BalancedBinaryTree{ void Main(); }
	namespace MinimumDepthofBinaryTree{ void Main(); }
	namespace PathSum{ void Main(); }
	namespace PathSumII{ void Main(); }
	namespace FlattenBinaryTreetoLinkedList{ void Main(); }
	namespace DistinctSubsequences{ void Main(); }
	namespace PopulatingNextRightPointersinEachNode{ void Main(); }
	namespace PopulatingNextRightPointersinEachNodeII{ void Main(); }
	namespace PascalsTriangle{ void Main(); }
	namespace PascalsTriangleII{ void Main(); }
	namespace Triangle{ void Main(); }
	namespace BestTimetoBuyandSellStock{ void Main(); }
	namespace BestTimetoBuyandSellStockII{ void Main(); }
	namespace BestTimetoBuyandSellStockIII{ void Main(); }
	namespace BinaryTreeMaximumPathSum{ void Main(); }
	namespace ValidPalindrome{ void Main(); }
	namespace WordLadderII{ void Main(); }
	namespace WordLadder{ void Main(); }
	namespace LongestConsecutiveSequence{ void Main(); }
	namespace SumRoottoLeafNumbers{ void Main(); }
	namespace SurroundedRegions{ void Main(); }
	namespace PalindromePartitioning{ void Main(); }
	namespace PalindromePartitioningII{ void Main(); }
	namespace CloneGraph{ void Main(); }
	namespace GasStation{ void Main(); }
	namespace Candy{ void Main(); }
	namespace SingleNumber{ void Main(); }
	namespace SingleNumberII{ void Main(); }
	namespace CopyListwithRandomPointer{ void Main(); }
	namespace WordBreak{ void Main(); }
	namespace WordBreakII{ void Main(); }
	namespace LinkedListCycle{ void Main(); }
	namespace LinkedListCycleII{ void Main(); }
	namespace ReorderList{ void Main(); }
	namespace BinaryTreePreorderTraversal{ void Main(); }
	namespace BinaryTreePostorderTraversal{ void Main(); }
	namespace LRUCache{ void Main(); }
	namespace InsertionSortList{ void Main(); }
	namespace SortList{ void Main(); }
	namespace MaxPointsonaLine{ void Main(); }
	namespace EvaluateReversePolishNotation{ void Main(); }
	namespace ReverseWordsinaString{ void Main(); }
	namespace MaximumProductSubarray{ void Main(); }
	namespace FindMinimuminRotatedSortedArray{ void Main(); }
	namespace FindMinimuminRotatedSortedArrayII{ void Main(); }
	namespace MinStack{ void Main(); }
	namespace BinaryTreeUpsideDown{ void Main(); }
	namespace ReadNCharactersGivenReadFour{ void Main(); }
	namespace ReadNCharactersGivenReadFourIICallmultipletimes{ void Main(); }
	namespace LongestSubstringwithAtMostTwoDistinctCharacters{ void Main(); }
	namespace IntersectionofTwoLinkedLists{ void Main(); }
	namespace OneEditDistance{ void Main(); }
	namespace FindPeakElement{ void Main(); }
	namespace MissingRanges{ void Main(); }
	namespace MaximumGap{ void Main(); }
	namespace CompareVersionNumbers{ void Main(); }
	namespace FractiontoRecurringDecimal{ void Main(); }
	namespace TwoSumIIInputarrayissorted{ void Main(); }
	namespace ExcelSheetColumnTitle{ void Main(); }
	namespace MajorityElement{ void Main(); }
	namespace TwoSumIIIDatastructuredesign{ void Main(); }
	namespace ExcelSheetColumnNumber{ void Main(); }
	namespace FactorialTrailingZeroes{ void Main(); }
	namespace BinarySearchTreeIterator{ void Main(); }
	namespace DungeonGame{ void Main(); }
	namespace CombineTwoTables{ void Main(); }
	namespace SecondHighestSalary{ void Main(); }
	namespace NthHighestSalary{ void Main(); }
	namespace RankScores{ void Main(); }
	namespace LargestNumber{ void Main(); }
	namespace ConsecutiveNumbers{ void Main(); }
	namespace EmployeesEarningMoreThanTheirManagers{ void Main(); }
	namespace DuplicateEmails{ void Main(); }
	namespace CustomersWhoNeverOrder{ void Main(); }
	namespace DepartmentHighestSalary{ void Main(); }
	namespace DepartmentTopThreeSalaries{ void Main(); }
	namespace ReverseWordsinaStringII{ void Main(); }
	namespace RepeatedDNASequences{ void Main(); }
	namespace BestTimetoBuyandSellStockIV{ void Main(); }
	namespace RotateArray{ void Main(); }
	namespace ReverseBits{ void Main(); }
	namespace NumberofOneBits{ void Main(); }
	namespace WordFrequency{ void Main(); }
	namespace ValidPhoneNumbers{ void Main(); }
	namespace TransposeFile{ void Main(); }
	namespace TenthLine{ void Main(); }
	namespace DeleteDuplicateEmails{ void Main(); }
	namespace RisingTemperature{ void Main(); }
	namespace HouseRobber{ void Main(); }
	namespace BinaryTreeRightSideView{ void Main(); }
	namespace NumberofIslands{ void Main(); }
	namespace BitwiseANDofNumbersRange{ void Main(); }
	namespace HappyNumber{ void Main(); }
	namespace RemoveLinkedListElements{ void Main(); }
	namespace CountPrimes{ void Main(); }
	namespace IsomorphicStrings{ void Main(); }
	namespace ReverseLinkedList{ void Main(); }
	namespace CourseSchedule{ void Main(); }
	namespace ImplementTrie{ void Main(); }
	namespace MinimumSizeSubarraySum{ void Main(); }
	namespace CourseScheduleII{ void Main(); }
	namespace AddandSearchWordDatastructuredesign{ void Main(); }
	namespace WordSearchII{ void Main(); }
	namespace HouseRobberII{ void Main(); }
	namespace ShortestPalindrome{ void Main(); }
	namespace KthLargestElementinanArray{ void Main(); }
	namespace CombinationSumIII{ void Main(); }
	namespace ContainsDuplicate{ void Main(); }
	namespace TheSkylineProblem{ void Main(); }
	namespace ContainsDuplicateII{ void Main(); }
	namespace ContainsDuplicateIII{ void Main(); }
	namespace MaximalSquare{ void Main(); }
	namespace CountCompleteTreeNodes{ void Main(); }
	namespace RectangleArea{ void Main(); }
	namespace BasicCalculator{ void Main(); }
	namespace ImplementStackusingQueues{ void Main(); }
	namespace InvertBinaryTree{ void Main(); }
	namespace BasicCalculatorII{ void Main(); }
	namespace SummaryRanges{ void Main(); }
	namespace MajorityElementII{ void Main(); }
	namespace KthSmallestElementinaBST{ void Main(); }
	namespace PowerofTwo{ void Main(); }
	namespace ImplementQueueusingStacks{ void Main(); }
	namespace NumberofDigitOne{ void Main(); }
	namespace PalindromeLinkedList{ void Main(); }
	namespace LowestCommonAncestorofaBinarySearchTree{ void Main(); }
	namespace LowestCommonAncestorofaBinaryTree{ void Main(); }
	namespace DeleteNodeinaLinkedList{ void Main(); }
	namespace ProductofArrayExceptSelf{ void Main(); }
	namespace SlidingWindowMaximum{ void Main(); }
	namespace SearchaTwoDMatrixII{ void Main(); }
	namespace DifferentWaystoAddParentheses{ void Main(); }
	namespace ValidAnagram{ void Main(); }
	namespace ShortestWordDistance{ void Main(); }
	namespace ShortestWordDistanceII{ void Main(); }
	namespace ShortestWordDistanceIII{ void Main(); }
	namespace StrobogrammaticNumber{ void Main(); }
	namespace StrobogrammaticNumberII{ void Main(); }
	namespace StrobogrammaticNumberIII{ void Main(); }
	namespace GroupShiftedStrings{ void Main(); }
	namespace CountUnivalueSubtrees{ void Main(); }
	namespace FlattenTwoDVector{ void Main(); }
	namespace MeetingRooms{ void Main(); }
	namespace MeetingRoomsII{ void Main(); }
	namespace FactorCombinations{ void Main(); }
	namespace VerifyPreorderSequenceinBinarySearchTree{ void Main(); }
	namespace PaintHouse{ void Main(); }
	namespace BinaryTreePaths{ void Main(); }
	namespace AddDigits{ void Main(); }
	namespace ThreeSumSmaller{ void Main(); }
	namespace SingleNumberIII{ void Main(); }
	namespace GraphValidTree{ void Main(); }
	namespace TripsandUsers{ void Main(); }
	namespace UglyNumber{ void Main(); }
	namespace UglyNumberII{ void Main(); }
	namespace PaintHouseII{ void Main(); }
	namespace PalindromePermutation{ void Main(); }
	namespace PalindromePermutationII{ void Main(); }
	namespace MissingNumber{ void Main(); }
	namespace AlienDictionary{ void Main(); }
	namespace ClosestBinarySearchTreeValue{ void Main(); }
	namespace EncodeandDecodeStrings{ void Main(); }
	namespace ClosestBinarySearchTreeValueII{ void Main(); }
	namespace IntegertoEnglishWords{ void Main(); }
	namespace HIndex{ void Main(); }
	namespace HIndexII{ void Main(); }
	namespace PaintFence{ void Main(); }
	namespace FindtheCelebrity{ void Main(); }
	namespace FirstBadVersion{ void Main(); }
	namespace PerfectSquares{ void Main(); }
	namespace WiggleSort{ void Main(); }
	namespace ZigzagIterator{ void Main(); }
	namespace ExpressionAddOperators{ void Main(); }
	namespace MoveZeroes{ void Main(); }
	namespace PeekingIterator{ void Main(); }
	namespace InorderSuccessorinBST{ void Main(); }
	namespace WallsandGates{ void Main(); }
	namespace FindtheDuplicateNumber{ void Main(); }
	namespace UniqueWordAbbreviation{ void Main(); }
	namespace GameofLife{ void Main(); }
	namespace WordPattern{ void Main(); }
	namespace WordPatternII{ void Main(); }
	namespace NimGame{ void Main(); }
	namespace FlipGame{ void Main(); }
	namespace FlipGameII{ void Main(); }
	namespace FindMedianfromDataStream{ void Main(); }
	namespace BestMeetingPoint{ void Main(); }
	namespace SerializeandDeserializeBinaryTree{ void Main(); }
	namespace BinaryTreeLongestConsecutiveSequence{ void Main(); }
	namespace BullsandCows{ void Main(); }
	namespace LongestIncreasingSubsequence{ void Main(); }
	namespace RemoveInvalidParentheses{ void Main(); }
	namespace SmallestRectangleEnclosingBlackPixels{ void Main(); }
	namespace RangeSumQueryImmutable{ void Main(); }
	namespace RangeSumQueryTwoDImmutable{ void Main(); }
	namespace NumberofIslandsII{ void Main(); }
	namespace AdditiveNumber{ void Main(); }
	namespace RangeSumQueryMutable{ void Main(); }
	namespace RangeSumQueryTwoDMutable{ void Main(); }
	namespace BestTimetoBuyandSellStockwithCooldown{ void Main(); }
	namespace MinimumHeightTrees{ void Main(); }
	namespace SparseMatrixMultiplication{ void Main(); }
	namespace BurstBalloons{ void Main(); }
	namespace SuperUglyNumber{ void Main(); }
	namespace BinaryTreeVerticalOrderTraversal{ void Main(); }
	namespace CountofSmallerNumbersAfterSelf{ void Main(); }
	namespace RemoveDuplicateLetters{ void Main(); }
	namespace ShortestDistancefromAllBuildings{ void Main(); }
	namespace MaximumProductofWordLengths{ void Main(); }
	namespace BulbSwitcher{ void Main(); }
	namespace GeneralizedAbbreviation{ void Main(); }
	namespace CreateMaximumNumber{ void Main(); }
	namespace CoinChange{ void Main(); }
	namespace NumberofConnectedComponentsinanUndirectedGraph{ void Main(); }
	namespace WiggleSortII{ void Main(); }
	namespace MaximumSizeSubarraySumEqualsk{ void Main(); }
	namespace PowerofThree{ void Main(); }
	namespace CountofRangeSum{ void Main(); }
	namespace OddEvenLinkedList{ void Main(); }
	namespace LongestIncreasingPathinaMatrix{ void Main(); }
	namespace PatchingArray{ void Main(); }
	namespace VerifyPreorderSerializationofaBinaryTree{ void Main(); }
	namespace ReconstructItinerary{ void Main(); }
	namespace LargestBSTSubtree{ void Main(); }
	namespace IncreasingTripletSubsequence{ void Main(); }
	namespace SelfCrossing{ void Main(); }
	namespace PalindromePairs{ void Main(); }
	namespace HouseRobberIII{ void Main(); }
	namespace CountingBits{ void Main(); }
	namespace NestedListWeightSum{ void Main(); }
	namespace LongestSubstringwithAtMostKDistinctCharacters{ void Main(); }
	namespace FlattenNestedListIterator{ void Main(); }
	namespace PowerofFour{ void Main(); }
	namespace IntegerBreak{ void Main(); }
	namespace ReverseString{ void Main(); }
	namespace ReverseVowelsofaString{ void Main(); }
	namespace MovingAveragefromDataStream{ void Main(); }
	namespace TopKFrequentElements{ void Main(); }
	namespace DesignTicTacToe{ void Main(); }
	namespace IntersectionofTwoArrays{ void Main(); }
	namespace IntersectionofTwoArraysII{ void Main(); }
	namespace AndroidUnlockPatterns{ void Main(); }
	namespace DataStreamasDisjointIntervals{ void Main(); }
	namespace DesignSnakeGame{ void Main(); }
	namespace RussianDollEnvelopes{ void Main(); }
	namespace DesignTwitter{ void Main(); }
	namespace LineReflection{ void Main(); }
	namespace CountNumberswithUniqueDigits{ void Main(); }
	namespace RearrangeStringkDistanceApart{ void Main(); }
	namespace LoggerRateLimiter{ void Main(); }
	namespace SortTransformedArray{ void Main(); }
	namespace BombEnemy{ void Main(); }
	namespace DesignHitCounter{ void Main(); }
	namespace MaxSumofRectangleNoLargerThanK{ void Main(); }
	namespace NestedListWeightSumII{ void Main(); }
	namespace WaterandJugProblem{ void Main(); }
	namespace FindLeavesofBinaryTree{ void Main(); }
	namespace ValidPerfectSquare{ void Main(); }
	namespace LargestDivisibleSubset{ void Main(); }
	namespace PlusOneLinkedList{ void Main(); }
	namespace RangeAddition{ void Main(); }
	namespace SumofTwoIntegers{ void Main(); }
	namespace SuperPow{ void Main(); }
	namespace FindKPairswithSmallestSums{ void Main(); }
	namespace GuessNumberHigherorLower{ void Main(); }
	namespace GuessNumberHigherorLowerII{ void Main(); }
	namespace WiggleSubsequence{ void Main(); }
	namespace CombinationSumIV{ void Main(); }
	namespace KthSmallestElementinaSortedMatrix{ void Main(); }
	namespace DesignPhoneDirectory{ void Main(); }
	namespace InsertDeleteGetRandomO{ void Main(); }
	namespace InsertDeleteGetRandomODuplicatesallowed{ void Main(); }
	namespace LinkedListRandomNode{ void Main(); }
	namespace RansomNote{ void Main(); }
	namespace ShuffleanArray{ void Main(); }
	namespace MiniParser{ void Main(); }
	namespace LexicographicalNumbers{ void Main(); }
	namespace FirstUniqueCharacterinaString{ void Main(); }
	namespace LongestAbsoluteFilePath{ void Main(); }
	namespace FindtheDifference{ void Main(); }
	namespace EliminationGame{ void Main(); }
	namespace PerfectRectangle{ void Main(); }
	namespace IsSubsequence{ void Main(); }
	namespace UTFEightValidation{ void Main(); }
	namespace DecodeString{ void Main(); }
	namespace LongestSubstringwithAtLeastKRepeatingCharacters{ void Main(); }
	namespace RotateFunction{ void Main(); }
	namespace IntegerReplacement{ void Main(); }
	namespace RandomPickIndex{ void Main(); }
	namespace EvaluateDivision{ void Main(); }
	namespace NthDigit{ void Main(); }
	namespace BinaryWatch{ void Main(); }
	namespace RemoveKDigits{ void Main(); }
	namespace FrogJump{ void Main(); }
	namespace SumofLeftLeaves{ void Main(); }
	namespace ConvertaNumbertoHexadecimal{ void Main(); }
	namespace QueueReconstructionbyHeight{ void Main(); }
	namespace TrappingRainWaterII{ void Main(); }
	namespace ValidWordAbbreviation{ void Main(); }
	namespace LongestPalindrome{ void Main(); }
	namespace SplitArrayLargestSum{ void Main(); }
	namespace MinimumUniqueWordAbbreviation{ void Main(); }
	namespace FizzBuzz{ void Main(); }
	namespace ArithmeticSlices{ void Main(); }
	namespace ThirdMaximumNumber{ void Main(); }
	namespace AddStrings{ void Main(); }
	namespace PartitionEqualSubsetSum{ void Main(); }
	namespace PacificAtlanticWaterFlow{ void Main(); }
	namespace SentenceScreenFitting{ void Main(); }
	namespace BattleshipsinaBoard{ void Main(); }
	namespace StrongPasswordChecker{ void Main(); }
	namespace MaximumXORofTwoNumbersinanArray{ void Main(); }
	namespace ValidWordSquare{ void Main(); }
	namespace ReconstructOriginalDigitsfromEnglish{ void Main(); }
	namespace LongestRepeatingCharacterReplacement{ void Main(); }
	namespace WordSquares{ void Main(); }
	namespace ConvertBinarySearchTreetoSortedDoublyLinkedList{ void Main(); }
	namespace ConstructQuadTree{ void Main(); }
	namespace SerializeandDeserializeNaryTree{ void Main(); }
	namespace NaryTreeLevelOrderTraversal{ void Main(); }
	namespace FlattenaMultilevelDoublyLinkedList{ void Main(); }
	namespace EncodeNaryTreetoBinaryTree{ void Main(); }
	namespace AllOoneDataStructure{ void Main(); }
	namespace MinimumGeneticMutation{ void Main(); }
	namespace NumberofSegmentsinaString{ void Main(); }
	namespace NonoverlappingIntervals{ void Main(); }
	namespace FindRightInterval{ void Main(); }
	namespace PathSumIII{ void Main(); }
	namespace FindAllAnagramsinaString{ void Main(); }
	namespace TernaryExpressionParser{ void Main(); }
	namespace KthSmallestinLexicographicalOrder{ void Main(); }
	namespace ArrangingCoins{ void Main(); }
	namespace FindAllDuplicatesinanArray{ void Main(); }
	namespace StringCompression{ void Main(); }
	namespace SequenceReconstruction{ void Main(); }
	namespace AddTwoNumbersII{ void Main(); }
	namespace ArithmeticSlicesIISubsequence{ void Main(); }
	namespace NumberofBoomerangs{ void Main(); }
	namespace FindAllNumbersDisappearedinanArray{ void Main(); }
	namespace SerializeandDeserializeBST{ void Main(); }
	namespace DeleteNodeinaBST{ void Main(); }
	namespace SortCharactersByFrequency{ void Main(); }
	namespace MinimumNumberofArrowstoBurstBalloons{ void Main(); }
	namespace MinimumMovestoEqualArrayElements{ void Main(); }
	namespace FourSumII{ void Main(); }
	namespace AssignCookies{ void Main(); }
	namespace OneThreeTwoPattern{ void Main(); }
	namespace CircularArrayLoop{ void Main(); }
	namespace PoorPigs{ void Main(); }
	namespace RepeatedSubstringPattern{ void Main(); }
	namespace LFUCache{ void Main(); }
	namespace HammingDistance{ void Main(); }
	namespace MinimumMovestoEqualArrayElementsII{ void Main(); }
	namespace IslandPerimeter{ void Main(); }
	namespace CanIWin{ void Main(); }
	namespace OptimalAccountBalancing{ void Main(); }
	namespace CountTheRepetitions{ void Main(); }
	namespace UniqueSubstringsinWraparoundString{ void Main(); }
	namespace ValidateIPAddress{ void Main(); }
	namespace ConvexPolygon{ void Main(); }
	namespace ImplementRandOneZero{ void Main(); }
	namespace EncodeStringwithShortestLength{ void Main(); }
	namespace ConcatenatedWords{ void Main(); }
	namespace MatchstickstoSquare{ void Main(); }
	namespace OnesandZeroes{ void Main(); }
	namespace Heaters{ void Main(); }
	namespace NumberComplement{ void Main(); }
	namespace TotalHammingDistance{ void Main(); }
	namespace GenerateRandomPointinaCircle{ void Main(); }
	namespace LargestPalindromeProduct{ void Main(); }
	namespace SlidingWindowMedian{ void Main(); }
	namespace MagicalString{ void Main(); }
	namespace LicenseKeyFormatting{ void Main(); }
	namespace SmallestGoodBase{ void Main(); }
	namespace FindPermutation{ void Main(); }
	namespace MaxConsecutiveOnes{ void Main(); }
	namespace PredicttheWinner{ void Main(); }
	namespace MaxConsecutiveOnesII{ void Main(); }
	namespace ZumaGame{ void Main(); }
	namespace RobotRoomCleaner{ void Main(); }
	namespace TheMaze{ void Main(); }
	namespace IncreasingSubsequences{ void Main(); }
	namespace ConstructtheRectangle{ void Main(); }
	namespace ReversePairs{ void Main(); }
	namespace TargetSum{ void Main(); }
	namespace TeemoAttacking{ void Main(); }
	namespace NextGreaterElementI{ void Main(); }
	namespace RandomPointinNonoverlappingRectangles{ void Main(); }
	namespace DiagonalTraverse{ void Main(); }
	namespace TheMazeIII{ void Main(); }
	namespace KeyboardRow{ void Main(); }
	namespace FindModeinBinarySearchTree{ void Main(); }
	namespace IPO{ void Main(); }
	namespace NextGreaterElementII{ void Main(); }
	namespace BaseSeven{ void Main(); }
	namespace TheMazeII{ void Main(); }
	namespace RelativeRanks{ void Main(); }
	namespace PerfectNumber{ void Main(); }
	namespace MostFrequentSubtreeSum{ void Main(); }
	namespace FibonacciNumber{ void Main(); }
	namespace InorderSuccessorinBSTII{ void Main(); }
	namespace GamePlayAnalysisI{ void Main(); }
	namespace GamePlayAnalysisII{ void Main(); }
	namespace FindBottomLeftTreeValue{ void Main(); }
	namespace FreedomTrail{ void Main(); }
	namespace FindLargestValueinEachTreeRow{ void Main(); }
	namespace LongestPalindromicSubsequence{ void Main(); }
	namespace SuperWashingMachines{ void Main(); }
	namespace CoinChangeTwo{ void Main(); }
	namespace RandomFlipMatrix{ void Main(); }
	namespace DetectCapital{ void Main(); }
	namespace LongestUncommonSubsequenceI{ void Main(); }
	namespace LongestUncommonSubsequenceII{ void Main(); }
	namespace ContinuousSubarraySum{ void Main(); }
	namespace LongestWordinDictionarythroughDeleting{ void Main(); }
	namespace ContiguousArray{ void Main(); }
	namespace BeautifulArrangement{ void Main(); }
	namespace WordAbbreviation{ void Main(); }
	namespace RandomPickwithWeight{ void Main(); }
	namespace Minesweeper{ void Main(); }
	namespace MinimumAbsoluteDifferenceinBST{ void Main(); }
	namespace LonelyPixelI{ void Main(); }
	namespace KdiffPairsinanArray{ void Main(); }
	namespace LonelyPixelII{ void Main(); }
	namespace GamePlayAnalysisIII{ void Main(); }
	namespace EncodeandDecodeTinyURL{ void Main(); }
	namespace ConstructBinaryTreefromString{ void Main(); }
	namespace ComplexNumberMultiplication{ void Main(); }
	namespace ConvertBSTtoGreaterTree{ void Main(); }
	namespace MinimumTimeDifference{ void Main(); }
	namespace SingleElementinaSortedArray{ void Main(); }
	namespace ReverseStringII{ void Main(); }
	namespace ZeroOneMatrix{ void Main(); }
	namespace DiameterofBinaryTree{ void Main(); }
	namespace OutputContestMatches{ void Main(); }
	namespace BoundaryofBinaryTree{ void Main(); }
	namespace RemoveBoxes{ void Main(); }
	namespace FriendCircles{ void Main(); }
	namespace SplitArraywithEqualSum{ void Main(); }
	namespace BinaryTreeLongestConsecutiveSequenceII{ void Main(); }
	namespace GamePlayAnalysisIV{ void Main(); }
	namespace StudentAttendanceRecordI{ void Main(); }
	namespace StudentAttendanceRecordII{ void Main(); }
	namespace OptimalDivision{ void Main(); }
	namespace BrickWall{ void Main(); }
	namespace SplitConcatenatedStrings{ void Main(); }
	namespace NextGreaterElementIII{ void Main(); }
	namespace ReverseWordsinaStringIII{ void Main(); }
	namespace QuadTreeIntersection{ void Main(); }
	namespace MaximumDepthofNaryTree{ void Main(); }
	namespace SubarraySumEqualsK{ void Main(); }
	namespace ArrayPartitionI{ void Main(); }
	namespace LongestLineofConsecutiveOneinMatrix{ void Main(); }
	namespace BinaryTreeTilt{ void Main(); }
	namespace FindtheClosestPalindrome{ void Main(); }
	namespace ArrayNesting{ void Main(); }
	namespace ReshapetheMatrix{ void Main(); }
	namespace PermutationinString{ void Main(); }
	namespace MaximumVacationDays{ void Main(); }
	namespace MedianEmployeeSalary{ void Main(); }
	namespace ManagerswithatLeastFiveDirectReports{ void Main(); }
	namespace FindMedianGivenFrequencyofNumbers{ void Main(); }
	namespace SubtreeofAnotherTree{ void Main(); }
	namespace SquirrelSimulation{ void Main(); }
	namespace WinningCandidate{ void Main(); }
	namespace DistributeCandies{ void Main(); }
	namespace OutofBoundaryPaths{ void Main(); }
	namespace EmployeeBonus{ void Main(); }
	namespace GetHighestAnswerRateQuestion{ void Main(); }
	namespace FindCumulativeSalaryofanEmployee{ void Main(); }
	namespace CountStudentNumberinDepartments{ void Main(); }
	namespace ShortestUnsortedContinuousSubarray{ void Main(); }
	namespace KillProcess{ void Main(); }
	namespace DeleteOperationforTwoStrings{ void Main(); }
	namespace FindCustomerReferee{ void Main(); }
	namespace InvestmentsinTwoZeroOneSix{ void Main(); }
	namespace CustomerPlacingtheLargestNumberofOrders{ void Main(); }
	namespace ErecttheFence{ void Main(); }
	namespace DesignInMemoryFileSystem{ void Main(); }
	namespace NaryTreePreorderTraversal{ void Main(); }
	namespace NaryTreePostorderTraversal{ void Main(); }
	namespace TagValidator{ void Main(); }
	namespace FractionAdditionandSubtraction{ void Main(); }
	namespace ValidSquare{ void Main(); }
	namespace LongestHarmoniousSubsequence{ void Main(); }
	namespace BigCountries{ void Main(); }
	namespace ClassesMoreThanFiveStudents{ void Main(); }
	namespace FriendRequestsIOverallAcceptanceRate{ void Main(); }
	namespace RangeAdditionII{ void Main(); }
	namespace MinimumIndexSumofTwoLists{ void Main(); }
	namespace NonnegativeIntegerswithoutConsecutiveOnes{ void Main(); }
	namespace HumanTrafficofStadium{ void Main(); }
	namespace FriendRequestsIIWhoHastheMostFriends{ void Main(); }
	namespace ConsecutiveAvailableSeats{ void Main(); }
	namespace DesignCompressedStringIterator{ void Main(); }
	namespace CanPlaceFlowers{ void Main(); }
	namespace ConstructStringfromBinaryTree{ void Main(); }
	namespace SalesPerson{ void Main(); }
	namespace TreeNode{ void Main(); }
	namespace FindDuplicateFileinSystem{ void Main(); }
	namespace TriangleJudgement{ void Main(); }
	namespace ValidTriangleNumber{ void Main(); }
	namespace ShortestDistanceinaPlane{ void Main(); }
	namespace ShortestDistanceinaLine{ void Main(); }
	namespace SecondDegreeFollower{ void Main(); }
	namespace AverageSalaryDepartmentsVSCompany{ void Main(); }
	namespace AddBoldTaginString{ void Main(); }
	namespace MergeTwoBinaryTrees{ void Main(); }
	namespace StudentsReportByGeography{ void Main(); }
	namespace BiggestSingleNumber{ void Main(); }
	namespace NotBoringMovies{ void Main(); }
	namespace TaskScheduler{ void Main(); }
	namespace DesignCircularQueue{ void Main(); }
	namespace AddOneRowtoTree{ void Main(); }
	namespace MaximumDistanceinArrays{ void Main(); }
	namespace MinimumFactorization{ void Main(); }
	namespace ExchangeSeats{ void Main(); }
	namespace SwapSalary{ void Main(); }
	namespace MaximumProductofThreeNumbers{ void Main(); }
	namespace KInversePairsArray{ void Main(); }
	namespace CourseScheduleIII{ void Main(); }
	namespace DesignExcelSumFormula{ void Main(); }
	namespace SmallestRangeCoveringElementsfromKLists{ void Main(); }
	namespace SumofSquareNumbers{ void Main(); }
	namespace FindtheDerangementofAnArray{ void Main(); }
	namespace DesignLogStorageSystem{ void Main(); }
	namespace ExclusiveTimeofFunctions{ void Main(); }
	namespace AverageofLevelsinBinaryTree{ void Main(); }
	namespace ShoppingOffers{ void Main(); }
	namespace DecodeWaysII{ void Main(); }
	namespace SolvetheEquation{ void Main(); }
	namespace DesignCircularDeque{ void Main(); }
	namespace DesignSearchAutocompleteSystem{ void Main(); }
	namespace MaximumAverageSubarrayI{ void Main(); }
	namespace MaximumAverageSubarrayII{ void Main(); }
	namespace SetMismatch{ void Main(); }
	namespace MaximumLengthofPairChain{ void Main(); }
	namespace PalindromicSubstrings{ void Main(); }
	namespace ReplaceWords{ void Main(); }
	namespace DotaTwoSenate{ void Main(); }
	namespace TwoKeysKeyboard{ void Main(); }
	namespace FourKeysKeyboard{ void Main(); }
	namespace FindDuplicateSubtrees{ void Main(); }
	namespace TwoSumIVInputisaBST{ void Main(); }
	namespace MaximumBinaryTree{ void Main(); }
	namespace PrintBinaryTree{ void Main(); }
	namespace CoinPath{ void Main(); }
	namespace RobotReturntoOrigin{ void Main(); }
	namespace FindKClosestElements{ void Main(); }
	namespace SplitArrayintoConsecutiveSubsequences{ void Main(); }
	namespace RemoveNine{ void Main(); }
	namespace ImageSmoother{ void Main(); }
	namespace MaximumWidthofBinaryTree{ void Main(); }
	namespace EqualTreePartition{ void Main(); }
	namespace StrangePrinter{ void Main(); }
	namespace NondecreasingArray{ void Main(); }
	namespace PathSumIV{ void Main(); }
	namespace BeautifulArrangementII{ void Main(); }
	namespace KthSmallestNumberinMultiplicationTable{ void Main(); }
	namespace TrimaBinarySearchTree{ void Main(); }
	namespace MaximumSwap{ void Main(); }
	namespace SecondMinimumNodeInaBinaryTree{ void Main(); }
	namespace BulbSwitcherII{ void Main(); }
	namespace NumberofLongestIncreasingSubsequence{ void Main(); }
	namespace LongestContinuousIncreasingSubsequence{ void Main(); }
	namespace CutOffTreesforGolfEvent{ void Main(); }
	namespace ImplementMagicDictionary{ void Main(); }
	namespace MapSumPairs{ void Main(); }
	namespace ValidParenthesisString{ void Main(); }
	namespace TwoFourGame{ void Main(); }
	namespace ValidPalindromeII{ void Main(); }
	namespace NextClosestTime{ void Main(); }
	namespace BaseballGame{ void Main(); }
	namespace KEmptySlots{ void Main(); }
	namespace RedundantConnection{ void Main(); }
	namespace RedundantConnectionII{ void Main(); }
	namespace RepeatedStringMatch{ void Main(); }
	namespace LongestUnivaluePath{ void Main(); }
	namespace KnightProbabilityinChessboard{ void Main(); }
	namespace MaximumSumofThreeNonOverlappingSubarrays{ void Main(); }
	namespace EmployeeImportance{ void Main(); }
	namespace StickerstoSpellWord{ void Main(); }
	namespace TopKFrequentWords{ void Main(); }
	namespace BinaryNumberwithAlternatingBits{ void Main(); }
	namespace NumberofDistinctIslands{ void Main(); }
	namespace MaxAreaofIsland{ void Main(); }
	namespace CountBinarySubstrings{ void Main(); }
	namespace DegreeofanArray{ void Main(); }
	namespace PartitiontoKEqualSumSubsets{ void Main(); }
	namespace FallingSquares{ void Main(); }
	namespace SearchinaBinarySearchTree{ void Main(); }
	namespace InsertintoaBinarySearchTree{ void Main(); }
	namespace SearchinaSortedArrayofUnknownSize{ void Main(); }
	namespace KthLargestElementinaStream{ void Main(); }
	namespace BinarySearch{ void Main(); }
	namespace DesignHashSet{ void Main(); }
	namespace DesignHashMap{ void Main(); }
	namespace DesignLinkedList{ void Main(); }
	namespace InsertintoaCyclicSortedList{ void Main(); }
	namespace ToLowerCase{ void Main(); }
	namespace RandomPickwithBlacklist{ void Main(); }
	namespace NumberofDistinctIslandsII{ void Main(); }
	namespace MinimumASCIIDeleteSumforTwoStrings{ void Main(); }
	namespace SubarrayProductLessThanK{ void Main(); }
	namespace BestTimetoBuyandSellStockwithTransactionFee{ void Main(); }
	namespace RangeModule{ void Main(); }
	namespace MaxStack{ void Main(); }
	namespace OnebitandTwobitCharacters{ void Main(); }
	namespace MaximumLengthofRepeatedSubarray{ void Main(); }
	namespace FindKthSmallestPairDistance{ void Main(); }
	namespace LongestWordinDictionary{ void Main(); }
	namespace AccountsMerge{ void Main(); }
	namespace RemoveComments{ void Main(); }
	namespace CandyCrush{ void Main(); }
	namespace FindPivotIndex{ void Main(); }
	namespace SplitLinkedListinParts{ void Main(); }
	namespace NumberofAtoms{ void Main(); }
	namespace MinimumWindowSubsequence{ void Main(); }
	namespace SelfDividingNumbers{ void Main(); }
	namespace MyCalendarI{ void Main(); }
	namespace CountDifferentPalindromicSubsequences{ void Main(); }
	namespace MyCalendarII{ void Main(); }
	namespace MyCalendarIII{ void Main(); }
	namespace FloodFill{ void Main(); }
	namespace SentenceSimilarity{ void Main(); }
	namespace AsteroidCollision{ void Main(); }
	namespace ParseLispExpression{ void Main(); }
	namespace SentenceSimilarityII{ void Main(); }
	namespace MonotoneIncreasingDigits{ void Main(); }
	namespace DailyTemperatures{ void Main(); }
	namespace DeleteandEarn{ void Main(); }
	namespace CherryPickup{ void Main(); }
	namespace ClosestLeafinaBinaryTree{ void Main(); }
	namespace NetworkDelayTime{ void Main(); }
	namespace FindSmallestLetterGreaterThanTarget{ void Main(); }
	namespace PrefixandSuffixSearch{ void Main(); }
	namespace MinCostClimbingStairs{ void Main(); }
	namespace LargestNumberAtLeastTwiceofOthers{ void Main(); }
	namespace ShortestCompletingWord{ void Main(); }
	namespace ContainVirus{ void Main(); }
	namespace NumberOfCornerRectangles{ void Main(); }
	namespace IPtoCIDR{ void Main(); }
	namespace OpentheLock{ void Main(); }
	namespace CrackingtheSafe{ void Main(); }
	namespace ReachaNumber{ void Main(); }
	namespace PourWater{ void Main(); }
	namespace PyramidTransitionMatrix{ void Main(); }
	namespace SetIntersectionSizeAtLeastTwo{ void Main(); }
	namespace BoldWordsinString{ void Main(); }
	namespace EmployeeFreeTime{ void Main(); }
	namespace FindAnagramMappings{ void Main(); }
	namespace SpecialBinaryString{ void Main(); }
	namespace PrimeNumberofSetBitsinBinaryRepresentation{ void Main(); }
	namespace PartitionLabels{ void Main(); }
	namespace LargestPlusSign{ void Main(); }
	namespace CouplesHoldingHands{ void Main(); }
	namespace ToeplitzMatrix{ void Main(); }
	namespace ReorganizeString{ void Main(); }
	namespace MaxChunksToMakeSortedII{ void Main(); }
	namespace MaxChunksToMakeSorted{ void Main(); }
	namespace BasicCalculatorIV{ void Main(); }
	namespace JewelsandStones{ void Main(); }
	namespace BasicCalculatorIII{ void Main(); }
	namespace SlidingPuzzle{ void Main(); }
	namespace MinimizeMaxDistancetoGasStation{ void Main(); }
	namespace GlobalandLocalInversions{ void Main(); }
	namespace SplitBST{ void Main(); }
	namespace SwapAdjacentinLRString{ void Main(); }
	namespace SwiminRisingWater{ void Main(); }
	namespace KthSymbolinGrammar{ void Main(); }
	namespace ReachingPoints{ void Main(); }
	namespace RabbitsinForest{ void Main(); }
	namespace TransformtoChessboard{ void Main(); }
	namespace MinimumDistanceBetweenBSTNodes{ void Main(); }
	namespace LetterCasePermutation{ void Main(); }
	namespace IsGraphBipartite{ void Main(); }
	namespace KthSmallestPrimeFraction{ void Main(); }
	namespace CheapestFlightsWithinKStops{ void Main(); }
	namespace RotatedDigits{ void Main(); }
	namespace EscapeTheGhosts{ void Main(); }
	namespace DominoandTrominoTiling{ void Main(); }
	namespace CustomSortString{ void Main(); }
	namespace NumberofMatchingSubsequences{ void Main(); }
	namespace PreimageSizeofFactorialZeroesFunction{ void Main(); }
	namespace ValidTicTacToeState{ void Main(); }
	namespace NumberofSubarrayswithBoundedMaximum{ void Main(); }
	namespace RotateString{ void Main(); }
	namespace AllPathsFromSourcetoTarget{ void Main(); }
	namespace SmallestRotationwithHighestScore{ void Main(); }
	namespace ChampagneTower{ void Main(); }
	namespace SimilarRGBColor{ void Main(); }
	namespace MinimumSwapsToMakeSequencesIncreasing{ void Main(); }
	namespace FindEventualSafeStates{ void Main(); }
	namespace BricksFallingWhenHit{ void Main(); }
	namespace UniqueMorseCodeWords{ void Main(); }
	namespace SplitArrayWithSameAverage{ void Main(); }
	namespace NumberofLinesToWriteString{ void Main(); }
	namespace MaxIncreasetoKeepCitySkyline{ void Main(); }
	namespace SoupServings{ void Main(); }
	namespace ExpressiveWords{ void Main(); }
	namespace ChalkboardXORGame{ void Main(); }
	namespace SubdomainVisitCount{ void Main(); }
	namespace LargestTriangleArea{ void Main(); }
	namespace LargestSumofAverages{ void Main(); }
	namespace BinaryTreePruning{ void Main(); }
	namespace BusRoutes{ void Main(); }
	namespace AmbiguousCoordinates{ void Main(); }
	namespace LinkedListComponents{ void Main(); }
	namespace RaceCar{ void Main(); }
	namespace MostCommonWord{ void Main(); }
	namespace ShortEncodingofWords{ void Main(); }
	namespace ShortestDistancetoaCharacter{ void Main(); }
	namespace CardFlippingGame{ void Main(); }
	namespace BinaryTreesWithFactors{ void Main(); }
	namespace GoatLatin{ void Main(); }
	namespace FriendsOfAppropriateAges{ void Main(); }
	namespace MostProfitAssigningWork{ void Main(); }
	namespace MakingALargeIsland{ void Main(); }
	namespace UniqueLetterString{ void Main(); }
	namespace ConsecutiveNumbersSum{ void Main(); }
	namespace PositionsofLargeGroups{ void Main(); }
	namespace MaskingPersonalInformation{ void Main(); }
	namespace FlippinganImage{ void Main(); }
	namespace FindAndReplaceinString{ void Main(); }
	namespace SumofDistancesinTree{ void Main(); }
	namespace ImageOverlap{ void Main(); }
	namespace RectangleOverlap{ void Main(); }
	namespace NewTwoOneGame{ void Main(); }
	namespace PushDominoes{ void Main(); }
	namespace SimilarStringGroups{ void Main(); }
	namespace MagicSquaresInGrid{ void Main(); }
	namespace KeysandRooms{ void Main(); }
	namespace SplitArrayintoFibonacciSequence{ void Main(); }
	namespace GuesstheWord{ void Main(); }
	namespace BackspaceStringCompare{ void Main(); }
	namespace LongestMountaininArray{ void Main(); }
	namespace HandofStraights{ void Main(); }
	namespace ShortestPathVisitingAllNodes{ void Main(); }
	namespace ShiftingLetters{ void Main(); }
	namespace MaximizeDistancetoClosestPerson{ void Main(); }
	namespace RectangleAreaII{ void Main(); }
	namespace LoudandRich{ void Main(); }
	namespace PeakIndexinaMountainArray{ void Main(); }
	namespace CarFleet{ void Main(); }
	namespace KSimilarStrings{ void Main(); }
	namespace ExamRoom{ void Main(); }
	namespace ScoreofParentheses{ void Main(); }
	namespace MinimumCosttoHireKWorkers{ void Main(); }
	namespace MirrorReflection{ void Main(); }
	namespace BuddyStrings{ void Main(); }
	namespace LemonadeChange{ void Main(); }
	namespace ScoreAfterFlippingMatrix{ void Main(); }
	namespace ShortestSubarraywithSumatLeastK{ void Main(); }
	namespace AllNodesDistanceKinBinaryTree{ void Main(); }
	namespace ShortestPathtoGetAllKeys{ void Main(); }
	namespace SmallestSubtreewithalltheDeepestNodes{ void Main(); }
	namespace PrimePalindrome{ void Main(); }
	namespace TransposeMatrix{ void Main(); }
	namespace BinaryGap{ void Main(); }
	namespace ReorderedPowerofTwo{ void Main(); }
	namespace AdvantageShuffle{ void Main(); }
	namespace MinimumNumberofRefuelingStops{ void Main(); }
	namespace LeafSimilarTrees{ void Main(); }
	namespace LengthofLongestFibonacciSubsequence{ void Main(); }
	namespace WalkingRobotSimulation{ void Main(); }
	namespace KokoEatingBananas{ void Main(); }
	namespace MiddleoftheLinkedList{ void Main(); }
	namespace StoneGame{ void Main(); }
	namespace NthMagicalNumber{ void Main(); }
	namespace ProfitableSchemes{ void Main(); }
	namespace DecodedStringatIndex{ void Main(); }
	namespace BoatstoSavePeople{ void Main(); }
	namespace ReachableNodesInSubdividedGraph{ void Main(); }
	namespace ProjectionAreaofThreeDShapes{ void Main(); }
	namespace UncommonWordsfromTwoSentences{ void Main(); }
	namespace SpiralMatrixIII{ void Main(); }
	namespace PossibleBipartition{ void Main(); }
	namespace SuperEggDrop{ void Main(); }
	namespace FairCandySwap{ void Main(); }
	namespace ConstructBinaryTreefromPreorderandPostorderTraversal{ void Main(); }
	namespace FindandReplacePattern{ void Main(); }
	namespace SumofSubsequenceWidths{ void Main(); }
	namespace SurfaceAreaofThreeDShapes{ void Main(); }
	namespace GroupsofSpecialEquivalentStrings{ void Main(); }
	namespace AllPossibleFullBinaryTrees{ void Main(); }
	namespace MaximumFrequencyStack{ void Main(); }
	namespace MonotonicArray{ void Main(); }
	namespace IncreasingOrderSearchTree{ void Main(); }
	namespace BitwiseORsofSubarrays{ void Main(); }
	namespace OrderlyQueue{ void Main(); }
	namespace RLEIterator{ void Main(); }
	namespace OnlineStockSpan{ void Main(); }
	namespace NumbersAtMostNGivenDigitSet{ void Main(); }
	namespace ValidPermutationsforDISequence{ void Main(); }
	namespace FruitIntoBaskets{ void Main(); }
	namespace SortArrayByParity{ void Main(); }
	namespace SuperPalindromes{ void Main(); }
	namespace SumofSubarrayMinimums{ void Main(); }
	namespace SmallestRangeI{ void Main(); }
	namespace SnakesandLadders{ void Main(); }
	namespace SmallestRangeII{ void Main(); }
	namespace OnlineElection{ void Main(); }
	namespace SortanArray{ void Main(); }
	namespace CatandMouse{ void Main(); }
	namespace XofaKindinaDeckofCards{ void Main(); }
	namespace PartitionArrayintoDisjointIntervals{ void Main(); }
	namespace WordSubsets{ void Main(); }
	namespace ReverseOnlyLetters{ void Main(); }
	namespace MaximumSumCircularSubarray{ void Main(); }
	namespace CompleteBinaryTreeInserter{ void Main(); }
	namespace NumberofMusicPlaylists{ void Main(); }
	namespace MinimumAddtoMakeParenthesesValid{ void Main(); }
	namespace SortArrayByParityII{ void Main(); }
	namespace ThreeSumWithMultiplicity{ void Main(); }
	namespace MinimizeMalwareSpread{ void Main(); }
	namespace LongPressedName{ void Main(); }
	namespace FlipStringtoMonotoneIncreasing{ void Main(); }
	namespace ThreeEqualParts{ void Main(); }
	namespace MinimizeMalwareSpreadII{ void Main(); }
	namespace UniqueEmailAddresses{ void Main(); }
	namespace BinarySubarraysWithSum{ void Main(); }
	namespace MinimumFallingPathSum{ void Main(); }
	namespace BeautifulArray{ void Main(); }
	namespace NumberofRecentCalls{ void Main(); }
	namespace ShortestBridge{ void Main(); }
	namespace KnightDialer{ void Main(); }
	namespace StampingTheSequence{ void Main(); }
	namespace ReorderLogFiles{ void Main(); }
	namespace RangeSumofBST{ void Main(); }
	namespace MinimumAreaRectangle{ void Main(); }
	namespace DistinctSubsequencesII{ void Main(); }
	namespace ValidMountainArray{ void Main(); }
	namespace DIStringMatch{ void Main(); }
	namespace FindtheShortestSuperstring{ void Main(); }
	namespace DeleteColumnstoMakeSorted{ void Main(); }
	namespace MinimumIncrementtoMakeArrayUnique{ void Main(); }
	namespace ValidateStackSequences{ void Main(); }
	namespace MostStonesRemovedwithSameRoworColumn{ void Main(); }
	namespace BagofTokens{ void Main(); }
	namespace LargestTimeforGivenDigits{ void Main(); }
	namespace RevealCardsInIncreasingOrder{ void Main(); }
	namespace FlipEquivalentBinaryTrees{ void Main(); }
	namespace LargestComponentSizebyCommonFactor{ void Main(); }
	namespace VerifyinganAlienDictionary{ void Main(); }
	namespace ArrayofDoubledPairs{ void Main(); }
	namespace DeleteColumnstoMakeSortedII{ void Main(); }
	namespace TallestBillboard{ void Main(); }
	namespace PrisonCellsAfterNDays{ void Main(); }
	namespace CheckCompletenessofaBinaryTree{ void Main(); }
	namespace RegionsCutBySlashes{ void Main(); }
	namespace DeleteColumnstoMakeSortedIII{ void Main(); }
	namespace NRepeatedElementinSizeTwoNArray{ void Main(); }
	namespace MaximumWidthRamp{ void Main(); }
	namespace MinimumAreaRectangleII{ void Main(); }
	namespace LeastOperatorstoExpressNumber{ void Main(); }
	namespace UnivaluedBinaryTree{ void Main(); }
	namespace VowelSpellchecker{ void Main(); }
	namespace NumbersWithSameConsecutiveDifferences{ void Main(); }
	namespace BinaryTreeCameras{ void Main(); }
	namespace PancakeSorting{ void Main(); }
	namespace PowerfulIntegers{ void Main(); }
	namespace FlipBinaryTreeToMatchPreorderTraversal{ void Main(); }
	namespace EqualRationalNumbers{ void Main(); }
	namespace KClosestPointstoOrigin{ void Main(); }
	namespace SubarraySumsDivisiblebyK{ void Main(); }
	namespace OddEvenJump{ void Main(); }
	namespace LargestPerimeterTriangle{ void Main(); }
	namespace SquaresofaSortedArray{ void Main(); }
	namespace LongestTurbulentSubarray{ void Main(); }
	namespace DistributeCoinsinBinaryTree{ void Main(); }
	namespace UniquePathsIII{ void Main(); }
	namespace TimeBasedKeyValueStore{ void Main(); }
	namespace TripleswithBitwiseANDEqualToZero{ void Main(); }
	namespace MinimumCostForTickets{ void Main(); }
	namespace StringWithoutAAAorBBB{ void Main(); }
	namespace SumofEvenNumbersAfterQueries{ void Main(); }
	namespace IntervalListIntersections{ void Main(); }
	namespace VerticalOrderTraversalofaBinaryTree{ void Main(); }
	namespace SmallestStringStartingFromLeaf{ void Main(); }
	namespace AddtoArrayFormofInteger{ void Main(); }
	namespace SatisfiabilityofEqualityEquations{ void Main(); }
	namespace BrokenCalculator{ void Main(); }
	namespace SubarrayswithKDifferentIntegers{ void Main(); }
	namespace CousinsinBinaryTree{ void Main(); }
	namespace RottingOranges{ void Main(); }
	namespace MinimumNumberofKConsecutiveBitFlips{ void Main(); }
	namespace NumberofSquarefulArrays{ void Main(); }
	namespace FindtheTownJudge{ void Main(); }
	namespace MaximumBinaryTreeII{ void Main(); }
	namespace AvailableCapturesforRook{ void Main(); }
	namespace MinimumCosttoMergeStones{ void Main(); }
	namespace GridIllumination{ void Main(); }
	namespace FindCommonCharacters{ void Main(); }
	namespace CheckIfWordIsValidAfterSubstitutions{ void Main(); }
	namespace MaxConsecutiveOnesIII{ void Main(); }
	namespace MaximizeSumOfArrayAfterKNegations{ void Main(); }
	namespace ClumsyFactorial{ void Main(); }
	namespace MinimumDominoRotationsForEqualRow{ void Main(); }
	namespace ConstructBinarySearchTreefromPreorderTraversal{ void Main(); }
	namespace ComplementofBaseOneZeroInteger{ void Main(); }
	namespace PairsofSongsWithTotalDurationsDivisiblebySixZero{ void Main(); }
	namespace CapacityToShipPackagesWithinDDays{ void Main(); }
	namespace NumbersWithRepeatedDigits{ void Main(); }
	namespace PartitionArrayIntoThreePartsWithEqualSum{ void Main(); }
	namespace BestSightseeingPair{ void Main(); }
	namespace SmallestIntegerDivisiblebyK{ void Main(); }
	namespace BinaryStringWithSubstringsRepresentingOneToN{ void Main(); }
	namespace ConverttoBaseTwo{ void Main(); }
	namespace BinaryPrefixDivisibleByFive{ void Main(); }
	namespace NextGreaterNodeInLinkedList{ void Main(); }
	namespace NumberofEnclaves{ void Main(); }
	namespace RemoveOutermostParentheses{ void Main(); }
	namespace SumofRootToLeafBinaryNumbers{ void Main(); }
	namespace CamelcaseMatching{ void Main(); }
	namespace VideoStitching{ void Main(); }
	namespace DivisorGame{ void Main(); }
	namespace MaximumDifferenceBetweenNodeandAncestor{ void Main(); }
	namespace LongestArithmeticSequence{ void Main(); }
	namespace RecoveraTreeFromPreorderTraversal{ void Main(); }
	namespace TwoCityScheduling{ void Main(); }
	namespace MatrixCellsinDistanceOrder{ void Main(); }
	namespace MaximumSumofTwoNonOverlappingSubarrays{ void Main(); }
	namespace StreamofCharacters{ void Main(); }
	namespace MovingStonesUntilConsecutive{ void Main(); }
	namespace ColoringABorder{ void Main(); }
	namespace UncrossedLines{ void Main(); }
	namespace EscapeaLargeMaze{ void Main(); }
	namespace ValidBoomerang{ void Main(); }
	namespace BinarySearchTreetoGreaterSumTree{ void Main(); }
	namespace MinimumScoreTriangulationofPolygon{ void Main(); }
	namespace MovingStonesUntilConsecutiveII{ void Main(); }
	namespace RobotBoundedInCircle{ void Main(); }
	namespace FlowerPlantingWithNoAdjacent{ void Main(); }
	namespace PartitionArrayforMaximumSum{ void Main(); }
	namespace LongestDuplicateSubstring{ void Main(); }
	namespace CustomersWhoBoughtAllProducts{ void Main(); }
	namespace LastStoneWeight{ void Main(); }
	namespace RemoveAllAdjacentDuplicatesInString{ void Main(); }
	namespace LongestStringChain{ void Main(); }
	namespace LastStoneWeightII{ void Main(); }
	namespace ActorsandDirectorsWhoCooperatedAtLeastThreeTimes{ void Main(); }
	namespace HeightChecker{ void Main(); }
	namespace GrumpyBookstoreOwner{ void Main(); }
	namespace PreviousPermutationWithOneSwap{ void Main(); }
	namespace DistantBarcodes{ void Main(); }
	namespace ShortestWaytoFormString{ void Main(); }
	namespace ConfusingNumber{ void Main(); }
	namespace CampusBikes{ void Main(); }
	namespace MinimizeRoundingErrortoMeetTarget{ void Main(); }
	namespace AllPathsfromSourceLeadtoDestination{ void Main(); }
	namespace MissingElementinSortedArray{ void Main(); }
	namespace LexicographicallySmallestEquivalentString{ void Main(); }
	namespace LongestRepeatingSubstring{ void Main(); }
	namespace NumberofValidSubarrays{ void Main(); }
	namespace FixedPoint{ void Main(); }
	namespace IndexPairsofaString{ void Main(); }
	namespace CampusBikesII{ void Main(); }
	namespace DigitCountinRange{ void Main(); }
	namespace ProductSalesAnalysisI{ void Main(); }
	namespace ProductSalesAnalysisII{ void Main(); }
	namespace ProductSalesAnalysisIII{ void Main(); }
	namespace GreatestCommonDivisorofStrings{ void Main(); }
	namespace FlipColumnsForMaximumNumberofEqualRows{ void Main(); }
	namespace AddingTwoNegabinaryNumbers{ void Main(); }
	namespace NumberofSubmatricesThatSumtoTarget{ void Main(); }
	namespace ProjectEmployeesI{ void Main(); }
	namespace ProjectEmployeesII{ void Main(); }
	namespace ProjectEmployeesIII{ void Main(); }
	namespace OccurrencesAfterBigram{ void Main(); }
	namespace LetterTilePossibilities{ void Main(); }
	namespace InsufficientNodesinRoottoLeafPaths{ void Main(); }
	namespace SmallestSubsequenceofDistinctCharacters{ void Main(); }
	namespace SalesAnalysisI{ void Main(); }
	namespace SalesAnalysisII{ void Main(); }
	namespace SalesAnalysisIII{ void Main(); }
	namespace SumofDigitsintheMinimumNumber{ void Main(); }
	namespace HighFive{ void Main(); }
	namespace BraceExpansion{ void Main(); }
	namespace ConfusingNumberII{ void Main(); }
	namespace DuplicateZeros{ void Main(); }
	namespace LargestValuesFromLabels{ void Main(); }
	namespace ShortestPathinBinaryMatrix{ void Main(); }
	namespace ShortestCommonSupersequence{ void Main(); }
	namespace StatisticsfromaLargeSample{ void Main(); }
	namespace CarPooling{ void Main(); }
	namespace FindinMountainArray{ void Main(); }
	namespace BraceExpansionII{ void Main(); }
	namespace GamePlayAnalysisV{ void Main(); }
	namespace UnpopularBooks{ void Main(); }
	namespace TwoSumLessThanK{ void Main(); }
	namespace FindKLengthSubstringsWithNoRepeatedCharacters{ void Main(); }
	namespace TheEarliestMomentWhenEveryoneBecomeFriends{ void Main(); }
	namespace PathWithMaximumMinimumValue{ void Main(); }
	namespace DistributeCandiestoPeople{ void Main(); }
	namespace PathInZigzagLabelledBinaryTree{ void Main(); }
	namespace FillingBookcaseShelves{ void Main(); }
	namespace ParsingABooleanExpression{ void Main(); }
	namespace NewUsersDailyCount{ void Main(); }
	namespace DefanginganIPAddress{ void Main(); }
	namespace CorporateFlightBookings{ void Main(); }
	namespace DeleteNodesAndReturnForest{ void Main(); }
	namespace MaximumNestingDepthofTwoValidParenthesesStrings{ void Main(); }
	namespace HighestGradeForEachStudent{ void Main(); }
	namespace ReportedPosts{ void Main(); }
	namespace PrintinOrder{ void Main(); }
	namespace PrintFooBarAlternately{ void Main(); }
	namespace PrintZeroEvenOdd{ void Main(); }
	namespace BuildingHTwoO{ void Main(); }
	namespace NumberofDaysinaMonth{ void Main(); }
	namespace RemoveVowelsfromaString{ void Main(); }
	namespace MaximumAverageSubtree{ void Main(); }
	namespace DivideArrayIntoIncreasingSequences{ void Main(); }
	namespace RelativeSortArray{ void Main(); }
	namespace LowestCommonAncestorofDeepestLeaves{ void Main(); }
	namespace LongestWellPerformingInterval{ void Main(); }
	namespace SmallestSufficientTeam{ void Main(); }
	namespace ActiveBusinesses{ void Main(); }
	namespace UserPurchasePlatform{ void Main(); }
	namespace NumberofEquivalentDominoPairs{ void Main(); }
	namespace ShortestPathwithAlternatingColors{ void Main(); }
	namespace MinimumCostTreeFromLeafValues{ void Main(); }
	namespace MaximumofAbsoluteValueExpression{ void Main(); }
	namespace ReportedPostsII{ void Main(); }
	namespace LargestUniqueNumber{ void Main(); }
	namespace ArmstrongNumber{ void Main(); }
	namespace ConnectingCitiesWithMinimumCost{ void Main(); }
	namespace ParallelCourses{ void Main(); }
	namespace NthTribonacciNumber{ void Main(); }
	namespace AlphabetBoardPath{ void Main(); }
	namespace LargestOneBorderedSquare{ void Main(); }
	namespace StoneGameII{ void Main(); }
	namespace UserActivityforthePastThreeZeroDaysI{ void Main(); }
	namespace UserActivityforthePastThreeZeroDaysII{ void Main(); }
	namespace LongestCommonSubsequence{ void Main(); }
	namespace DecreaseElementsToMakeArrayZigzag{ void Main(); }
	namespace BinaryTreeColoringGame{ void Main(); }
	namespace SnapshotArray{ void Main(); }
	namespace LongestChunkedPalindromeDecomposition{ void Main(); }
	namespace ArticleViewsI{ void Main(); }
	namespace ArticleViewsII{ void Main(); }
	namespace CheckIfaNumberIsMajorityElementinaSortedArray{ void Main(); }
	namespace MinimumSwapstoGroupAllOnesTogether{ void Main(); }
	namespace AnalyzeUserWebsiteVisitPattern{ void Main(); }
	namespace StringTransformsIntoAnotherString{ void Main(); }
	namespace DayoftheYear{ void Main(); }
	namespace NumberofDiceRollsWithTargetSum{ void Main(); }
	namespace SwapForLongestRepeatedCharacterSubstring{ void Main(); }
	namespace OnlineMajorityElementInSubarray{ void Main(); }
	namespace MarketAnalysisI{ void Main(); }
	namespace MarketAnalysisII{ void Main(); }

	namespace RemoveZeroSumConsecutiveNodesfromLinkedList { void Main(); }
	namespace FindWordsThatCanBeFormedbyCharacters { void Main(); }	
	namespace DayoftheWeek { void Main(); }
	namespace CompareStringsbyFrequencyoftheSmallestCharacter { void Main(); }
	namespace DistanceBetweenBusStops { void Main(); }
	namespace DietPlanPerformance { void Main(); }
	namespace SingleRowKeyboard { void Main(); }
	namespace CountSubstringswithOnlyOneDistinctLetter { void Main(); }
	namespace ReverseStringIII { void Main(); }
	namespace MinimumAbsoluteDifference { void Main(); }
	namespace MaximumNumberofBalloons { void Main(); }
	namespace UniqueNumerofOccurrence { void Main(); }
	namespace HowManyApplesCanYouPutintotheBasket { void Main(); }
	namespace SmallestStringWithSwaps { void Main(); }
	namespace GetEqualSubstringsWithinBudget { void Main(); }
	namespace PlaywithChips { void Main(); }
	namespace IntersectionofThreeSortedArrays { void Main(); }
	namespace CanMakePalindromefromSubstring { void Main(); }
	namespace InvalidTransactions { void Main(); }	
	namespace ReorderDatainLogFiles { void Main(); }
	namespace SplitaStringinBalancedStrings { void Main(); }
};
